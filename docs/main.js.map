{"version":3,"sources":["./src/app/service/contato.ts","./src/environments/environment.ts","./src/app/service/api-backend.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/pessoa.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Contato {\r\n\r\n  nome: string;\r\n  telefone: string;\r\n  email: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'https://app-api-teste-java.herokuapp.com/pessoa/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Pessoa} from './pessoa';\nimport {environment} from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiBackendService {\n  constructor(private http: HttpClient) {\n\n  }\n\n  apiUrl: string = environment.apiURL;\n\n  listAll(): Observable<Pessoa> {\n    return this.http.get<Pessoa>(this.apiUrl);\n  }\n\n  save(pessoa: Pessoa): Observable<Pessoa> {\n    return this.http.post<Pessoa>(this.apiUrl + '/', pessoa);\n  }\n\n  deletar(id: number): Observable<void> {\n    return this.http.delete<void>(this.apiUrl + '/' + id);\n  }\n\n  atualizar(pessoa: Pessoa): Observable<Pessoa> {\n    return this.http.delete<Pessoa>(this.apiUrl + '/' + pessoa.id);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiBackendService} from './service/api-backend.service';\nimport {NotifierService} from 'angular-notifier';\nimport {Pessoa} from './service/pessoa';\nimport {Contato} from './service/contato';\nimport {Validators} from '@angular/forms';\nimport * as $ from 'jquery';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  private readonly notifier: NotifierService;\n  pessoa: Pessoa = new Pessoa();\n  contato: Contato = new Contato();\n\n  pessoas: Pessoa;\n  contatos: Contato;\n\n  showAddContato = false;\n  editingContato = false;\n  contatoList: any;\n\n\n  constructor(private pessoaService: ApiBackendService, notifierService: NotifierService) {\n    this.notifier = notifierService;\n  }\n\n  // tslint:disable-next-line:typedef\n  ngOnInit() {\n    this.listarPessoas();\n  }\n\n  // tslint:disable-next-line:typedef\n  listarPessoas() {\n    this.pessoaService.listAll().subscribe(pessoaList => {\n      this.pessoas = pessoaList;\n    }, error => {\n      console.log('Erro ao listar pessoas');\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  salvar() {\n    if (!this.pessoa.id) {\n      this.pessoa.contatos = this.contatoList;\n      this.pessoaService.save(this.pessoa).subscribe(pessoa => {\n        this.listarPessoas();\n      }, error => {\n        console.log('Erro ao cadastrar');\n      });\n    } else {\n      this.pessoa.contatos = this.contatoList;\n      this.pessoaService.atualizar(this.pessoa).subscribe(pessoa => {\n        this.listarPessoas();\n      }, error => {\n        console.log('Erro ao Atualizar');\n      });\n    }\n\n  }\n\n  // tslint:disable-next-line:typedef\n  addContato() {\n    this.showAddContato = true;\n  }\n\n  // tslint:disable-next-line:typedef\n  salvarContato() {\n    this.contatoList = new Array();\n    this.contatoList.push(this.contato);\n  }\n\n  // tslint:disable-next-line:typedef\n  cancelarAddContato() {\n    this.showAddContato = false;\n  }\n\n  // tslint:disable-next-line:typedef\n  mostrarContatos(contatos) {\n    this.contatoList = contatos;\n  }\n\n  // tslint:disable-next-line:typedef\n  fecharContatos() {\n    this.contatoList = null;\n  }\n\n  // tslint:disable-next-line:typedef\n  editarPessoa(pessoa) {\n    this.pessoa = pessoa;\n    this.editingContato = true;\n  }\n\n  // tslint:disable-next-line:typedef\n  cancelarEdicao() {\n    this.editingContato = false;\n  }\n\n  // tslint:disable-next-line:typedef\n  deletarPessoa(pessoa) {\n    this.pessoaService.deletar(pessoa.id).subscribe({\n      next: (response) => this.listarPessoas()\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  deletarContato(contato) {\n    this.contatoList.pop(contato.index);\n  }\n\n  // tslint:disable-next-line:typedef\n  validateEmail(email) {\n    console.log(email);\n    const regularExpression = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regularExpression.test(String(email).toLowerCase());\n  }\n\n}\n","<div class=\"template-cadastro-pessoa\">\n  <div class=\"container\">\n    <nav class=\"navbar navbar-dark bg-info\">\n      <h2>Teste de Programação</h2>\n    </nav>\n\n    <div class=\"card\">\n      <div class=\"row\">\n        <div class=\"formulario col-md-5\">\n          <div class=\"card-header\">\n            <h5>Pessoa</h5>\n          </div>\n          <form>\n            <div class=\"card-body\">\n              <div>\n                <label>Nome</label>\n                <input type=\"text\"\n                       required=\"true\"\n                       name=\"nome\"\n                       id=\"nome\"\n                       class=\"form-control\"\n                       [maxLength]=\"50\"\n                       [(ngModel)]=\"pessoa.nome\"/>\n              </div>\n              <div>\n                <label>CPF</label>\n                <input type=\"text\"\n                       required=\"true\"\n                       name=\"cpf\"\n                       id=\"cpf\"\n                       class=\"form-control\"\n                       mask=\"000.000.000-00\"\n                       minlength=\"14\"\n                       maxlength=\"14\"\n                       [(ngModel)]=\"pessoa.cpf\"/>\n              </div>\n              <div>\n                <label>Data de Nascimento</label>\n                <input\n                  type=\"date\"\n                  required=\"true\"\n                  name=\"dataNascimento\"\n                  id=\"dataNascimento\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"pessoa.dataNascimento\"\n                  [maxLength]=\"10\"/>\n              </div>\n              <div class=\"row\" style=\"margin-top: 5%\">\n                <div class=\"btn-group btn col-form-label-sm\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addContato()\">Adicionar contato\n                  </button>\n                </div>\n                <div class=\"btn-group btn col-form-label-sm\" *ngIf=\"editingContato\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelarEdicao()\">Cancelar</button>\n                </div>\n              </div>\n\n            </div>\n            <div class=\"btn-group btn\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"salvar()\" [disabled]=\"!contatoList\">Salvar</button>\n            </div>\n          </form>\n\n          <!--          contatos-->\n        </div>\n        <div class=\"formulario-contatos col-md-5\" *ngIf=\"showAddContato\">\n          <div class=\"card-header\">\n            <h5>Contato</h5>\n          </div>\n          <form>\n            <div class=\"card-body\">\n              <div>\n                <label>Nome</label>\n                <input type=\"text\"\n                       required\n                       name=\"contato_nome\"\n                       id=\"contato_nome\"\n                       class=\"form-control\"\n                       [maxLength]=\"50\"\n                       [(ngModel)]=\"contato.nome\"/>\n              </div>\n              <div>\n                <label>Telefone</label>\n                <input type=\"text\"\n                       required\n                       name=\"contato_telefone\"\n                       id=\"contato_telefone\"\n                       class=\"form-control\"\n                       mask=\"(00) 0000-00009\"\n                       [maxLength]=\"14\"\n                       [(ngModel)]=\"contato.telefone\"/>\n              </div>\n              <div>\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  required\n                  name=\"contato_email\"\n                  id=\"contato_email\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"contato.email\"\n                  [maxLength]=\"50\"\n                  (ngModelChange)=\"validateEmail(contato.email)\"/>\n              </div>\n              <div class=\"btn-group btn\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"salvarContato()\">Add</button>\n              </div>\n              <div class=\"btn-group btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelarAddContato()\">Cancelar</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"table-listagem-contatos card\" *ngIf=\"contatoList\">\n      <div class=\"card-header\">\n        <h4>Lista de Contatos</h4>\n      </div>\n      <div class=\"card-body\">\n        <table *ngFor=\"let contato of contatoList\" class=\"table table-bordered\">\n          <tr>\n            <th>Nome</th>\n            <th>cpf</th>\n            <th>Data de Nascimento</th>\n            <th>Açoes</th>\n          </tr>\n\n          <tr>\n            <td>{{contato.nome}}</td>\n            <td>{{contato.telefone}}</td>\n            <td>{{contato.email}}</td>\n            <td>\n              <button class=\"btn btn-danger\" title=\"excluir\" (click)=\"deletarContato(contato)\">X</button>\n            </td>\n          </tr>\n        </table>\n        <button class=\"btn btn-danger\" title=\"excluir\" (click)=\"fecharContatos()\">Fechar</button>\n      </div>\n    </div>\n\n\n    <div class=\"table-listagem-pessoas card\">\n      <div class=\"card-header\">\n        <h4>Lista de pessoa</h4>\n      </div>\n\n      <div class=\"card-body\">\n        <table *ngFor=\"let pessoa of pessoas\" class=\"table table-bordered\">\n          <tr>\n            <th>#id</th>\n            <th>Nome</th>\n            <th>cpf</th>\n            <th>Data de Nascimento</th>\n            <th>Açoes</th>\n          </tr>\n\n          <tr>\n            <td>{{pessoa.id}}</td>\n            <td>{{pessoa.nome}}</td>\n            <td>{{pessoa.cpf}}</td>\n            <td>{{pessoa.dataNascimento}}</td>\n            <td>\n              <button *ngIf=\"pessoa.contatos.length > 0\" class=\"btn btn-info\" title=\"ver contatos\"\n                      (click)=\"mostrarContatos(pessoa.contatos)\">\n                <i-bs\n                  name=\"list\"\n                  class=\"text-info\">\n                </i-bs>\n              </button>\n              <button type=\"button\" class=\"btn btn-default\"\n                      (click)=\"editarPessoa(pessoa)\">\n                <i-bs\n                  name=\"pencil-square\"\n                  class=\"text-primary\"\n                  width=\"2rem\"\n                  height=\"2rem\">\n                </i-bs>\n              </button>\n              <button class=\"btn btn-danger\" title=\"excluir\" (click)=\"deletarPessoa(pessoa)\">X</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ApiBackendService} from './service/api-backend.service';\nimport {FormsModule} from '@angular/forms';\nimport {NotifierModule} from 'angular-notifier';\nimport {NgxBootstrapIconsModule} from 'ngx-bootstrap-icons';\nimport {allIcons} from 'ngx-bootstrap-icons';\nimport {NgxMaskModule, IConfig} from 'ngx-mask';\n\nimport {AppComponent} from './app.component';\n\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = null;\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    NotifierModule,\n    NgxBootstrapIconsModule.forRoot(allIcons),\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [HttpClientModule, ApiBackendService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Contato} from './contato';\r\n\r\nexport class Pessoa {\r\n\r\n  id: number;\r\n  nome: string;\r\n  cpf: string;\r\n  dataNascimento: string;\r\n  contatos: Contato;\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}